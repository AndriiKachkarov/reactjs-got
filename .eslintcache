[{"C:\\React\\reactjs-got\\src\\index.js":"1","C:\\React\\reactjs-got\\src\\reportWebVitals.js":"2","C:\\React\\reactjs-got\\src\\components\\app\\App.js":"3","C:\\React\\reactjs-got\\src\\components\\itemList\\itemList.js":"4","C:\\React\\reactjs-got\\src\\components\\randomChar\\randomChar.js":"5","C:\\React\\reactjs-got\\src\\components\\header\\header.js":"6","C:\\React\\reactjs-got\\src\\services\\gotService.js":"7","C:\\React\\reactjs-got\\src\\components\\spinner\\spinner.js":"8","C:\\React\\reactjs-got\\src\\components\\errorMassege\\errorMessage.js":"9","C:\\React\\reactjs-got\\src\\components\\characterPage\\characterPage.js":"10","C:\\React\\reactjs-got\\src\\components\\rowBlock\\rowBlock.js":"11","C:\\React\\reactjs-got\\src\\components\\itemDetails\\itemDetails.js":"12","C:\\React\\reactjs-got\\src\\components\\field\\field.js":"13"},{"size":562,"mtime":1608713937607,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1608460710136,"results":"16","hashOfConfig":"15"},{"size":1368,"mtime":1608726373565,"results":"17","hashOfConfig":"15"},{"size":1186,"mtime":1608729262699,"results":"18","hashOfConfig":"15"},{"size":2438,"mtime":1608724482973,"results":"19","hashOfConfig":"15"},{"size":1119,"mtime":1608644581007,"results":"20","hashOfConfig":"15"},{"size":1980,"mtime":1608727285726,"results":"21","hashOfConfig":"15"},{"size":484,"mtime":1608717960117,"results":"22","hashOfConfig":"15"},{"size":300,"mtime":1608720382547,"results":"23","hashOfConfig":"15"},{"size":1625,"mtime":1608806567045,"results":"24","hashOfConfig":"15"},{"size":351,"mtime":1608728953686,"results":"25","hashOfConfig":"15"},{"size":1759,"mtime":1608806567042,"results":"26","hashOfConfig":"15"},{"size":304,"mtime":1608804063191,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"awe2tq",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\reactjs-got\\src\\index.js",[],["57","58"],"C:\\React\\reactjs-got\\src\\reportWebVitals.js",[],"C:\\React\\reactjs-got\\src\\components\\app\\App.js",[],"C:\\React\\reactjs-got\\src\\components\\itemList\\itemList.js",[],"C:\\React\\reactjs-got\\src\\components\\randomChar\\randomChar.js",[],"C:\\React\\reactjs-got\\src\\components\\header\\header.js",["59","60","61","62"],"import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst HeaderBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 80px;\r\n`;\r\n\r\nconst HeaderTitle = styled.h3`\r\n    font-size: 24px;\r\n    color: #fff;\r\n    margin: 0;\r\n`;\r\n\r\nconst HeaderLinks = styled.ul`\r\n    display: flex;\r\n    margin: 0;\r\n    align-items: center;\r\n    color: #fff;\r\n    list-style-type: none;\r\n    li {\r\n        margin-right: 20px;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst Header = () => {\r\n    return (\r\n        <HeaderBlock>\r\n            <HeaderTitle>\r\n                <a href=\"#\">\r\n                    Game of Thrones DB\r\n                </a>\r\n            </HeaderTitle>\r\n            <HeaderLinks>\r\n                <li>\r\n                    <a href=\"#\">Characters</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Houses</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"#\">Books</a>\r\n                </li>\r\n            </HeaderLinks>\r\n        </HeaderBlock>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","C:\\React\\reactjs-got\\src\\services\\gotService.js",[],"C:\\React\\reactjs-got\\src\\components\\spinner\\spinner.js",[],"C:\\React\\reactjs-got\\src\\components\\errorMassege\\errorMessage.js",[],"C:\\React\\reactjs-got\\src\\components\\characterPage\\characterPage.js",[],"C:\\React\\reactjs-got\\src\\components\\rowBlock\\rowBlock.js",[],"C:\\React\\reactjs-got\\src\\components\\itemDetails\\itemDetails.js",["63","64","65","66"],"import React, {Component} from 'react';\r\nimport './itemDetails.css';\r\nimport gotService from \"../../services/gotService\";\r\n\r\nexport default class ItemDetails extends Component {\r\n\r\n\r\n    state = {\r\n        item: null\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.updateItem();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.itemId !== prevProps.itemId) {\r\n            this.updateItem()\r\n        }\r\n    }\r\n\r\n    gotService = new gotService();\r\n\r\n    updateItem() {\r\n        const {itemId, getData} = this.props;\r\n\r\n        if (!itemId) {\r\n            return;\r\n        }\r\n\r\n        getData(itemId)\r\n            .then(item => {\r\n                this.setState({item});\r\n            })\r\n    }\r\n\r\n    getLines = () => {\r\n\r\n        return Object.entries(this.state.item).map(prop => {\r\n            return prop[0] === 'name' || prop[0] === 'id' ? null : (\r\n                <li className=\"list-group-item d-flex justify-content-between\">\r\n                    <span className=\"term\">{prop[0]}</span>\r\n                    <span>{prop[1]}</span>\r\n                </li>\r\n            )\r\n        }\r\n    )\r\n    };\r\n\r\n    render() {\r\n\r\n\r\n\r\n        if (!this.state.item) {\r\n            return <span className='select-error'>Please select a character</span>\r\n        }\r\n\r\n        const lines = this.getLines();\r\n        console.log(lines);\r\n\r\n        const {name, gender, born, died, culture} = this.state.item;\r\n        const {item} = this.state;\r\n        return (\r\n            <div className=\"item-details rounded\">\r\n                <h4>{name}</h4>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {\r\n                        React.Children.map(this.props.children, child => {\r\n                            return React.cloneElement(child, {item})\r\n                        })\r\n                    }\r\n                    {/*{this.getLines()}*/}\r\n                    {/*<li className=\"list-group-item d-flex justify-content-between\">*/}\r\n                    {/*    <span className=\"term\">Gender</span>*/}\r\n                    {/*    <span>{gender}</span>*/}\r\n                    {/*</li>*/}\r\n                    {/*<li className=\"list-group-item d-flex justify-content-between\">*/}\r\n                    {/*    <span className=\"term\">Born</span>*/}\r\n                    {/*    <span>{born}</span>*/}\r\n                    {/*</li>*/}\r\n                    {/*<li className=\"list-group-item d-flex justify-content-between\">*/}\r\n                    {/*    <span className=\"term\">Died</span>*/}\r\n                    {/*    <span>{died}</span>*/}\r\n                    {/*</li>*/}\r\n                    {/*<li className=\"list-group-item d-flex justify-content-between\">*/}\r\n                    {/*    <span className=\"term\">Culture</span>*/}\r\n                    {/*    <span>{culture}</span>*/}\r\n                    {/*</li>*/}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\React\\reactjs-got\\src\\components\\field\\field.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":33,"column":17,"nodeType":"73","endLine":33,"endColumn":29},{"ruleId":"71","severity":1,"message":"72","line":39,"column":21,"nodeType":"73","endLine":39,"endColumn":33},{"ruleId":"71","severity":1,"message":"72","line":42,"column":21,"nodeType":"73","endLine":42,"endColumn":33},{"ruleId":"71","severity":1,"message":"72","line":45,"column":21,"nodeType":"73","endLine":45,"endColumn":33},{"ruleId":"74","severity":1,"message":"75","line":60,"column":22,"nodeType":"76","messageId":"77","endLine":60,"endColumn":28},{"ruleId":"74","severity":1,"message":"78","line":60,"column":30,"nodeType":"76","messageId":"77","endLine":60,"endColumn":34},{"ruleId":"74","severity":1,"message":"79","line":60,"column":36,"nodeType":"76","messageId":"77","endLine":60,"endColumn":40},{"ruleId":"74","severity":1,"message":"80","line":60,"column":42,"nodeType":"76","messageId":"77","endLine":60,"endColumn":49},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'gender' is assigned a value but never used.","Identifier","unusedVar","'born' is assigned a value but never used.","'died' is assigned a value but never used.","'culture' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]